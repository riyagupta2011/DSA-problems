Solution-
vector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m) {
	// Write your code here.
	vector<int> rows;
	vector<int> cols;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(matrix[i][j]==0)
			{
				rows.push_back(i);
				cols.push_back(j);
			}
		}
	}
	for(int i=0;i<n;i++)
	{
		auto it=find(rows.begin(),rows.end(),i);
		for(int j=0;j<m;j++)
		{
			auto it1=find(cols.begin(),cols.end(),j);
			if(it1!=cols.end() || it!=rows.end())
			{
				matrix[i][j]=0;
			}
		}
	}
	return matrix;
}


Optimal
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int col0=1;
        int n=matrix.size();
        int m=matrix[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(matrix[i][j]==0)
                {
                    matrix[i][0]=0;
                    if(j!=0)
                    matrix[0][j]=0;
                    else
                    col0=0;
                }
            }
        }
        for(int i=1;i<n;i++)
        {
            for(int j=1;j<m;j++)
            {
                if(matrix[i][j]!=0)
                {
                    if(matrix[0][j]==0 || matrix[i][0]==0)
                    matrix[i][j]=0;
                }
            }
        }
        if(matrix[0][0]==0)
        {
            for(int j=0;j<m;j++)
            {
                matrix[0][j]=0;
            }
        }
        if(col0==0)
        {
            for(int i=0;i<n;i++)
            {
                matrix[i][0]=0;
            }
        }
    }
};