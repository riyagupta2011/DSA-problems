vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) {
    sort(A.begin(),A.end());
    sort(B.begin(),B.end());
    int n=A.size();
    int m=B.size();
    priority_queue<pair<int,pair<int,int>>> pq;
    set<pair<int,int>> s;
    pq.push({A[n-1]+B[m-1],{n-1,m-1}});
    s.insert({n-1,m-1});
    vector<int> ans;
    for(int i=0;i<C;i++)
    {
       auto temp=pq.top();
       pq.pop();
       ans.push_back(temp.first);
       int k=temp.second.first;
       int j=temp.second.second;
       int sum=A[k-1]+B[j];
       pair<int, int> temp1 = make_pair(k - 1, j);
       if(s.find(temp1)==s.end())
       {
           pq.push({sum,temp1});
           s.insert(temp1);
       }
        sum=A[k]+B[j-1];
      temp1 = make_pair(k , j-1);
       if(s.find(temp1)==s.end())
       {
           pq.push({sum,temp1});
           s.insert(temp1);
       }
    }
    
    return ans;
}