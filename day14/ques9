#include <bits/stdc++.h> 
vector<int> maxMinWindow(vector<int> arr, int n) {
    // Write your code here.
      stack<int> st;
        vector<int> left(n,-1);
        vector<int> right(n,n);
        
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && arr[st.top()]>=arr[i])
            {
                st.pop();
            }
            if(!st.empty())
            left[i]=st.top();
            st.push(i);
        }
        while(!st.empty())
        st.pop();
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && arr[st.top()]>=arr[i])
            {
                st.pop();
            }
            if(!st.empty())
            right[i]=st.top();
            st.push(i);
        }
        
        vector<int> len(n+1,0);
        for(int i=0;i<n;i++)
        {
            int x=right[i]-left[i]-1;
            
            len[x]=max(len[x],arr[i]);
        }
        for(int i=n-1;i>=0;i--)
        len[i]=max(len[i],len[i+1]);
        vector<int> res(n);
        for(int i=1;i<=n;i++)
        {
            res[i-1]=len[i];
        }
        return res;
    

}