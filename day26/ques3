class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum=0;
        for(int i=0;i<nums.size();i++)
        {
            sum=sum+nums[i];
        }
        if(sum%2!=0)
        return false;
        int n=nums.size();
        int target=sum/2;

        vector<vector<bool>> dp(n,vector<bool>(target+1,false));
        for(int i=0;i<n;i++)
        dp[i][0]=true;

        if(nums[0]<=target)
        dp[0][nums[0]]=true;

        for(int i=1;i<n;i++)
        {
            for(int j=1;j<=target+1;j++)
            {
                bool take=false;
                bool not_take=dp[i-1][j];
                if(nums[i]<=j)
                take=dp[i-1][j-nums[i]];

                dp[i][j]=take||not_take;
            }
        }
        return dp[n-1][target];

    }
};