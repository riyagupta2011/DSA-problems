class Solution{
		

	public:
	int longest(int arr[],int i,int prev,int n, vector<vector<int>> &dp)
	{
	    if(i>=n)
	    return 0;
	    if(dp[i][prev+1]!=-1)
	    return dp[i][prev+1];
	    int take=INT_MIN;
	    int not_take=longest(arr,i+1,prev,n,dp);
	    if(arr[prev]<arr[i] || prev==-1)
	    take=arr[i]+longest(arr,i+1,i,n,dp);
	    return dp[i][prev+1]= max(take,not_take);
	    
	}
	int maxSumIS(int arr[], int n)  
	{  
	    // Your code goes here
	    vector<vector<int>> dp(n,vector<int>(n+1,-1));
	    int ans=longest(arr,0,-1,n,dp);
	    return ans;
	}  
};