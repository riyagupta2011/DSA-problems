class Solution {
public:
int f(string word1,string word2,int i,int j, vector<vector<int>> &dp)
{
    if(i==-1 && j==-1)
    return 0;
    if(i==-1 && j>=0)
    return j+1;
    if(i>=0 && j==-1)
    return i+1;
    if(dp[i][j]!=-1)
    return dp[i][j];
    if(word1[i]==word2[j])
    {
        return f(word1,word2,i-1,j-1,dp);
    }
    int insert=1+f(word1,word2,i,j-1,dp);
    int replace=1+f(word1,word2,i-1,j-1,dp);
    int delet=1+f(word1,word2,i-1,j,dp);
    return dp[i][j]= min(insert,min(delet,replace));
}
    int minDistance(string word1, string word2) {
       
        int l1=word1.length();
        int l2=word2.length();
         vector<vector<int>> dp(l1,vector<int>(l2,-1));
        int ans=f(word1,word2,l1-1,l2-1,dp);
        return ans;
    }
};