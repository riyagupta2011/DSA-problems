vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> ans;
    if(root==NULL)
    return ans;
    queue<BinaryTreeNode<int>*> q;
    int x=0;
    q.push(root);
    while(!q.empty())
    {
        int size=q.size();
        vector<int> row(size);
       for(int i=0;i<size;i++)
        {
            BinaryTreeNode<int> *node=q.front();
            q.pop();
            int index;
            if(x==0)
            index=i;
            else
            index=size-i-1;
            row[index]=node->data;
            if(node->left!=NULL)
            q.push(node->left);
            if(node->right!=NULL)
            q.push(node->right);


        }
        if(x==0)
        x=1;
        else
        x=0;
        for(int i=0;i<row.size();i++)
        {
            ans.push_back(row[i]);
        }
    }
    return ans;
}
