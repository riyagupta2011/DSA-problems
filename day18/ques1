/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL)
        return ans;
        queue<TreeNode*> q;
        vector<int> level;
        q.push(root);
        while(!q.empty())
        {
            int size=q.size();
            vector<int> level;
            while(size--)
            {
               TreeNode *it=q.front();
               q.pop();
               level.push_back(it->val);
               if(it->left!=NULL)
               {
                   q.push(it->left);
               }
                if(it->right!=NULL)
               {
                   q.push(it->right);
               }
            }
            ans.push_back(level);
        }
      return ans;
    }
};