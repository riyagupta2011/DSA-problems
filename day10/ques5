class Solution{
    public:
    void f(vector<vector<int>> &m, int n, vector<string> &ans,string t,int i,int j,vector<vector<int>> &visited)
    {
        if(  i==n-1 && j==n-1 && m[i][j]==1)
        {
            ans.push_back(t);
            return ;
        }
        if(i>=n || j>=n || i<0 || j<0 || m[i][j]==0 || visited[i][j]==1)
        return ;
        visited[i][j]=1;
        f(m,n,ans,t+"D",i+1,j,visited);
        f(m,n,ans,t+"L",i,j-1,visited);
        f(m,n,ans,t+"R",i,j+1,visited);
        f(m,n,ans,t+"U",i-1,j,visited);
        visited[i][j]=0;
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        vector<vector<int>> visited(n,vector<int>(n,0));
        f(m,n,ans,"",0,0,visited);
        return ans;
    }
};

    